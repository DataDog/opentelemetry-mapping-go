name: test
on:
  push:
    branches: [main]
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+*"
  pull_request:
    types: [opened, synchronize, reopened, labeled, unlabeled]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  setup-environment:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      - name: Setup Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5
        with:
          go-version: "1.23.0"
      - name: Cache Go
        id: go-cache
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684
        with:
          path: |
            ~/go/bin
            ~/go/pkg/mod
          key: go-cache-${{ runner.os }}-${{ hashFiles('**/go.sum') }}-${{ hashFiles('internal/tools/**') }}
      - name: Install dependencies
        if: steps.go-cache.outputs.cache-hit != 'true'
        run: make for-all CMD="go mod download"
      - name: Install Tools
        if: steps.go-cache.outputs.cache-hit != 'true'
        run: make install-tools

  unittest:
    strategy:
      matrix:
        go-version: ["1.23.0", "1.24.0"]
    runs-on: ubuntu-latest
    needs: [setup-environment]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      - name: Setup Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5
        with:
          go-version: ${{ matrix.go-version }}
      - name: Cache Go
        id: go-cache
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684
        with:
          path: |
            ~/go/bin
            ~/go/pkg/mod
          key: go-cache-${{ runner.os }}-${{ hashFiles('**/go.sum') }}-${{ hashFiles('internal/tools/**') }}
      - name: Cache Build
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684
        with:
          path: ~/.cache/go-build
          key: unittest-${{ runner.os }}-go-build-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}-${{ hashFiles('internal/tools/**') }}
      - name: Run Unit Tests
        run: make test-junit
      - uses: datadog/junit-upload-github-action@762867566348d59ac9bcf479ebb4ec040db8940a
        if: always()
        with:
          api_key: ${{ secrets.DD_CI_API_KEY }}
          service: opentelemetry-mapping-go
          files: testresults/
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@18283e04ce6e62d37312384ff67231eb8fd56d24 # 5.4.3
        if: startsWith( matrix.go-version, '1.23' )
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
      - name: cleanup
        if: always()
        run: rm -rf testresults/ && find . -type f -name "*.cover" -exec rm -f {} +

  lint:
    runs-on: ubuntu-latest
    needs: [setup-environment]
    steps:
      - name: Checkout Repo
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      - name: Setup Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5
        with:
          go-version: "1.23.0"
      - name: Cache Go
        id: go-cache
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684
        with:
          path: |
            ~/go/bin
            ~/go/pkg/mod
          key: go-cache-${{ runner.os }}-${{ hashFiles('**/go.sum') }}-${{ hashFiles('internal/tools/**') }}
      - name: Cache Build
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684
        with:
          path: ~/.cache/go-build
          key: lint-${{ runner.os }}-${{ hashFiles('**/go.sum') }}-${{ hashFiles('internal/tools/**') }}
      - name: Check go mod tidy
        run: make tidy && git diff -s --exit-code || (echo "make tidy needed"; exit 1)
      - name: Check gofmt
        run: make fmt  && git diff -s --exit-code || (echo  "make fmt needed"; exit 1)
      - name: Check licenses file
        run: make gen-licenses && git diff --exit-code || (echo "make gen-licenses needed"; exit 1)
      - name: Check golangci-lint
        run: make lint OPTS="--timeout 2m"

  breaking-changes:
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.pull_request.labels.*.name, 'breaking-change') && github.event_name == 'pull_request'}}
    needs: [setup-environment]
    steps:
      - name: Checkout base branch
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with: 
          ref: ${{ github.base_ref }}
          path: ${{ github.base_ref }}

      - name: Checkout HEAD
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with: 
          ref: ${{ github.head_ref }}
          path: ${{ github.head_ref }}

      - name: Cache Go
        id: go-cache
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684
        with:
          path: |
            ~/go/bin
            ~/go/pkg/mod
          key: go-cache-${{ runner.os }}-${{ hashFiles('**/go.sum') }}-${{ hashFiles('internal/tools/**') }}

      - name: Setup Go
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5
        with:
          go-version: "1.23.0"

      - name: Install tools
        run: |
          cd ${{ github.head_ref }}
          make install-tools

      - name: Generate-States
        run: |
          cd ${{ github.base_ref }}
          make apidiff-generate APIHEADERS=~/apidiff-data
          
      - name: Compare-States
        run: |
          cd ${{ github.head_ref }}
          make apidiff-compare APIHEADERS=~/apidiff-data
